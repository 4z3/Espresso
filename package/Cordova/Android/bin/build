#! /bin/sh
# usage: create-cordova-android-project
set -xeuf

# TODO configuration
# TODO export src_dir="${src_dir-$PWD}"
# TODO export phonegap_dir="${phonegap_dir-$ROOT/../submodules/github/4z3/phonegap}"
# TODO export sdk="${sdk}"
# TODO export mode="${mode-debug}"
export activity="${activity-MyActivity}"
export package="${package-com.test.mypackage}"

# configuration
export build_dir="${build_dir-$PWD}"
# TODO[?] phonegap_dir="${phonegap_dir-$ROOT/../submodules/github/4z3/phonegap}"
export sdk="${sdk}"
export mode="${mode-debug}"
export activity="${activity-MyActivity}"
export package="${package-com.test.mypackage}"

if test "$mode" = release; then
  export keystore="${keystore}"
  export keyalias="${keyalias}"
  # optional: storepass, keypass
fi

# sanity-check configuration
validate-sdk
validate-mode
validate-activity
validate-package
validate-build_dir

if test "$mode" = release; then
  validate-keystore
  # TODO validate-keyalias
fi

# setup self-destructive working directory
cd "`mktemp -d -t Espresso-package-cordova-android.XXXXXXXXXX`"
if echo "${ESPRESSO_DEBUG-}" | grep -q package; then
  : debugging espresso package
else
  # activate self-destructive if we're not debugging this component
  trap "cd '$OLDPWD'; rm -fR '$PWD'" EXIT INT QUIT
fi
# TODO ln -s "$phonegap_dir/Android" phonegap
# TODO ln -s "$src_dir" src
ln -s "$applicationDirectory" app

# TODO dynamic (this was $phonegap_dir before)
cordova_home="$HOME/Espresso/submodules/apache/incubator-cordova-android"
cordova_version="$(cat "$cordova_home/VERSION")"

if test -n "${proj_skel-}"; then
  cp -R "$proj_skel" android-project
else
  # create android project directory
  (
    cd "$cordova_home"
    unset POSIXLY_CORRECT
    # TODO modify bin/create's TARGET to match ours!
    bin/create "$OLDPWD/android-project" "$package" "$activity"
      # 2>&1 | sed 's/^/cordova: /'
  )

  # sanitize android project directory
  find android-project/cordova/templates/project/assets/www -type f |
      sed 's:\(android-project\)/cordova/templates/project:rm \1:' |
      tee gc >/dev/null
  . ./gc
  rm gc
  (
    cd android-project/assets/www
    mv cordova-$cordova_version.js cordova.js
  )
fi
# cp -R android-project /tmp/android-project.skel

pwd
ls -lA
#find

# - copy application files into android project directory (cp ... assets/)
#   - rm bin/create's assets (see $path/cordova/templates/project/assets/www)
#   - copy selectively (instead of wildcarding and cleaning pot. cruft)
(
  cd "$build_dir"
  find -type f | grep -E '\.(html|js|css|png)$' | tar -c -T -
) | tar -C android-project/assets/www -x
find android-project/assets/www

# sanitize application files
# TODO omit type="..." in Espresso core
gsedi android-project/assets/www/index.html '
  s|\(</\?\)[sS][cC][rR][iI][pP][tT]|\1script|g
  s|\(<script[^>]*\) type="[^/]*/javascript"\([^>]*>\)|\1\2|g;
'

find android-project/assets

# update android project files to use Cordova
gsedi android-project/src/`echo $package | tr . /`/$activity.java '
  s|^\([ ]*\)\(super.loadUrl(.*);.*\)|\1super.setIntegerProperty("loadUrlTimeoutValue", 60000);\
\1\2|
'
# TODO[debug] diff
#cat android-project/src/`echo $package | tr . /`/$activity.java
# TODO? charset="utf-8" type="application/javascript"
gsedi android-project/assets/www/index.html '
  1,/<script/s|\(.*\)\(<\(script\).*\)|\1\<\3 src="cordova.js"></\3>\
<\3>var isPhoneGap = true;</\3>\
\2|
'
# TODO[debug] diff
#cat android-project/assets/www/index.html

#(cd android-project; find)
#exit

setup-icons
setup-splash
#cat android-project/src/`echo $package | tr . /`/$activity.java
setup-manifest

add-plugins

cat android-project/assets/www/index.html
find android-project/assets/www

# build android package
(cd android-project && ant --noconfig "$mode")

# sign-and-align-apk
apk_basename="$activity-$mode"
if test "$mode" = release; then
  # TODO? find the only apk in bin
  if ! test -e android-project/bin/$apk_basename-unsigned.apk; then
    apk_basename="$activity"
    if ! test -e android-project/bin/$apk_basename-unsigned.apk; then
      echo "No .apk-file found (this should not happen)." >&2
      exit 23
    fi
  fi
  # sign and align android package in release mode
  jarsigner -verbose \
      -keystore "$keystore" \
      ${storepass+-storepass "$storepass"} \
      ${keypass+-keypass "$keypass"} \
      -signedjar android-project/bin/$apk_basename-unaligned.apk \
      android-project/bin/$apk_basename-unsigned.apk \
      "$keyalias"
  zipalign -v 4 android-project/bin/$apk_basename-unaligned.apk \
      android-project/bin/$apk_basename.apk
fi

# emit android package
cp android-project/bin/$apk_basename.apk "$build_dir"
